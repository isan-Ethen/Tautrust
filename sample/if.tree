params: [
  Param {
    param: Some(
      Pat {
        span: sample/if.rs:1:12: 1:13 (#0)
        kind: PatKind {
          Binding {
            name: "n"
            mode: BindingMode(No, Not)
            var: LocalVarId(HirId(DefId(0:3 ~ if[30c5]::if_expr).2))
            ty: i32
            is_primary: true
            subpattern: None
          }
        }
      }
    )
  }
]
body:
  Expr {
    span: sample/if.rs:1:20: 7:2 (#0)
    kind: 
      Block {
        stmts: []
        expr:
          Expr {
            span: sample/if.rs:2:3: 6:4 (#0)
            kind: 
              If {
                cond:
                  Expr {
                    span: sample/if.rs:2:6: 2:16 (#4)
                    kind: 
                      Binary {
                        op: Eq
                        lhs:
                          Expr {
                            span: sample/if.rs:2:6: 2:11 (#0)
                            kind: 
                              Binary {
                                op: Rem
                                lhs:
                                  Expr {
                                    span: sample/if.rs:2:6: 2:7 (#0)
                                    kind: 
                                      VarRef {
                                        id: LocalVarId(HirId(DefId(0:3 ~ if[30c5]::if_expr).2))
                                      }
                                  }
                                rhs:
                                  Expr {
                                    span: sample/if.rs:2:10: 2:11 (#0)
                                    kind: 
                                      Literal( lit: Spanned { node: Int(Pu128(2), Unsuffixed), span: sample/if.rs:2:10: 2:11 (#0) }, neg: false)

                                  }
                              }
                          }
                        rhs:
                          Expr {
                            span: sample/if.rs:2:15: 2:16 (#0)
                            kind: 
                              Literal( lit: Spanned { node: Int(Pu128(1), Unsuffixed), span: sample/if.rs:2:15: 2:16 (#0) }, neg: false)

                          }
                      }
                  }
                then:
                  Expr {
                    span: sample/if.rs:2:17: 4:4 (#0)
                    kind: 
                      Block {
                        stmts: [
                          Stmt {
                            kind: Expr {
                              expr:
                                Expr {
                                  span: sample/if.rs:3:5: 3:11 (#0)
                                  kind: 
                                    AssignOp {
                                      op: Add
                                      lhs:
                                        Expr {
                                          span: sample/if.rs:3:5: 3:6 (#0)
                                          kind: 
                                            VarRef {
                                              id: LocalVarId(HirId(DefId(0:3 ~ if[30c5]::if_expr).2))
                                            }
                                        }
                                      rhs:
                                        Expr {
                                          span: sample/if.rs:3:10: 3:11 (#0)
                                          kind: 
                                            Literal( lit: Spanned { node: Int(Pu128(1), Unsuffixed), span: sample/if.rs:3:10: 3:11 (#0) }, neg: false)

                                        }
                                    }
                                }
                            }
                          }
                        ]
                        expr: []
                      }
                  }
                else:
                  Expr {
                    span: sample/if.rs:4:10: 6:4 (#0)
                    kind: 
                      Block {
                        stmts: [
                          Stmt {
                            kind: Expr {
                              expr:
                                Expr {
                                  span: sample/if.rs:5:5: 5:11 (#0)
                                  kind: 
                                    AssignOp {
                                      op: Div
                                      lhs:
                                        Expr {
                                          span: sample/if.rs:5:5: 5:6 (#0)
                                          kind: 
                                            VarRef {
                                              id: LocalVarId(HirId(DefId(0:3 ~ if[30c5]::if_expr).2))
                                            }
                                        }
                                      rhs:
                                        Expr {
                                          span: sample/if.rs:5:10: 5:11 (#0)
                                          kind: 
                                            Literal( lit: Spanned { node: Int(Pu128(2), Unsuffixed), span: sample/if.rs:5:10: 5:11 (#0) }, neg: false)

                                        }
                                    }
                                }
                            }
                          }
                        ]
                        expr: []
                      }
                  }
              }
          }
      }
  }

