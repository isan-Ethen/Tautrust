(DefId(0:4 ~ match[4a7a]::main), params: [
]
body:
  Expr {
    span: sample/match.rs:10:11: 13:2 (#0)
    kind: 
      Block {
        stmts: [
          Stmt {
            kind: Let {
              pattern: 
                Expr {
                  span: sample/match.rs:11:7: 11:8 (#0)
                  kind: 
                    Pat {
                      kind: PatKind {
                        Binding {
                          name: "x"
                          mode: BindingMode(No, Not)
                          var: LocalVarId(HirId(DefId(0:4 ~ match[4a7a]::main).4))
                          ty: i32
                          is_primary: true
                          subpattern: None
                        }
                      }
                    }
                }
              ,
              initializer: Some(
                Expr {
                  span: sample/match.rs:11:11: 11:12 (#0)
                  kind: 
                    Literal( lit: Spanned { node: Int(Pu128(5), Unsuffixed), span: sample/match.rs:11:11: 11:12 (#0) }, neg: false)

                }
              )
              else_block: None
              span: sample/match.rs:11:3: 11:12 (#0)
            }
          }
          Stmt {
            kind: Expr {
              expr:
                Expr {
                  span: sample/match.rs:12:3: 12:16 (#0)
                  kind: 
                    Call {
                      ty: FnDef(DefId(0:3 ~ match[4a7a]::match_expr), [])
                      from_hir_call: true
                      fn_span: sample/match.rs:12:3: 12:16 (#0)
                      fun:
                        Expr {
                          span: sample/match.rs:12:3: 12:13 (#0)
                          kind: 
                            ZstLiteral(user_ty: None)
                        }
                      args: [
                        Expr {
                          span: sample/match.rs:12:14: 12:15 (#0)
                          kind: 
                            VarRef {
                              id: LocalVarId(HirId(DefId(0:4 ~ match[4a7a]::main).4))
                            }
                        }
                      ]
                    }
                }
            }
          }
        ]
        expr: []
      }
  }
)
(DefId(0:3 ~ match[4a7a]::match_expr), params: [
  Param {
    param: Some(
      Expr {
        span: sample/match.rs:1:15: 1:16 (#0)
        kind: 
          Pat {
            kind: PatKind {
              Binding {
                name: "n"
                mode: BindingMode(No, Not)
                var: LocalVarId(HirId(DefId(0:3 ~ match[4a7a]::match_expr).2))
                ty: i32
                is_primary: true
                subpattern: None
              }
            }
          }
      }
    )
  }
]
body:
  Expr {
    span: sample/match.rs:1:23: 8:2 (#0)
    kind: 
      Block {
        stmts: []
        expr:
          Expr {
            span: sample/match.rs:2:3: 7:4 (#0)
            kind: 
              Match {
                scrutinee:
                  Expr {
                    span: sample/match.rs:2:9: 2:10 (#0)
                    kind: 
                      VarRef {
                        id: LocalVarId(HirId(DefId(0:3 ~ match[4a7a]::match_expr).2))
                      }
                  }
                arms: [
                    pattern: 
                      Expr {
                        span: sample/match.rs:3:5: 3:9 (#0)
                        kind: 
                          Pat {
                            kind: PatKind {
                              Range ( PatRange { lo: Finite(Ty(i32, 0_i32)), hi: Finite(Ty(i32, 5_i32)), end: Excluded, ty: i32 } )
                            }
                          }
                      }
                    guard: None
                    body: 
                      Expr {
                        span: sample/match.rs:3:13: 5:6 (#0)
                        kind: 
                          Block {
                            stmts: [
                              Stmt {
                                kind: Expr {
                                  expr:
                                    Expr {
                                      span: sample/match.rs:4:7: 4:13 (#0)
                                      kind: 
                                        AssignOp {
                                          op: Add
                                          lhs:
                                            Expr {
                                              span: sample/match.rs:4:7: 4:8 (#0)
                                              kind: 
                                                VarRef {
                                                  id: LocalVarId(HirId(DefId(0:3 ~ match[4a7a]::match_expr).2))
                                                }
                                            }
                                          rhs:
                                            Expr {
                                              span: sample/match.rs:4:12: 4:13 (#0)
                                              kind: 
                                                Literal( lit: Spanned { node: Int(Pu128(1), Unsuffixed), span: sample/match.rs:4:12: 4:13 (#0) }, neg: false)

                                            }
                                        }
                                    }
                                }
                              }
                            ]
                            expr: []
                          }
                      }
                    span: sample/match.rs:3:5: 5:6 (#0)
                  }
                    pattern: 
                      Expr {
                        span: sample/match.rs:6:5: 6:6 (#0)
                        kind: 
                          Pat {
                            kind: PatKind {
                              Wild
                            }
                          }
                      }
                    guard: None
                    body: 
                      Expr {
                        span: sample/match.rs:6:10: 6:16 (#0)
                        kind: 
                          AssignOp {
                            op: Add
                            lhs:
                              Expr {
                                span: sample/match.rs:6:10: 6:11 (#0)
                                kind: 
                                  VarRef {
                                    id: LocalVarId(HirId(DefId(0:3 ~ match[4a7a]::match_expr).2))
                                  }
                              }
                            rhs:
                              Expr {
                                span: sample/match.rs:6:15: 6:16 (#0)
                                kind: 
                                  Literal( lit: Spanned { node: Int(Pu128(2), Unsuffixed), span: sample/match.rs:6:15: 6:16 (#0) }, neg: false)

                              }
                          }
                      }
                    span: sample/match.rs:6:5: 6:16 (#0)
                  }
                ]
              }
          }
      }
  }
)
